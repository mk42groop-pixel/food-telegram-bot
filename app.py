import os
import requests
import schedule
import time
import random
from datetime import datetime, timedelta
from threading import Thread
from flask import Flask
from dotenv import load_dotenv

load_dotenv()
app = Flask(__name__)

TELEGRAM_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
TELEGRAM_CHANNEL = os.getenv('TELEGRAM_CHANNEL')

class SmartFoodChannel:
    def __init__(self):
        self.token = TELEGRAM_TOKEN
        self.channel = TELEGRAM_CHANNEL
        # –ö–µ–º–µ—Ä–æ–≤–æ UTC+7
        self.timezone_offset = 7
        self.content_themes = self.get_weekly_themes()
        
    def get_kemerovo_time(self):
        """–ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –ö–µ–º–µ—Ä–æ–≤–æ (UTC+7)"""
        utc_time = datetime.utcnow()
        kemerovo_time = utc_time + timedelta(hours=self.timezone_offset)
        return kemerovo_time
    
    def get_weekly_themes(self):
        return {
            0: "üöÄ –ë—ã—Å—Ç—Ä—ã–µ –∑–∞–≤—Ç—Ä–∞–∫–∏",
            1: "üíº –û–±–µ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã", 
            2: "‚ö° –£–∂–∏–Ω—ã –∑–∞ 20 –º–∏–Ω—É—Ç",
            3: "üîç –†–∞–∑–±–æ—Ä –º–∏—Ñ–æ–≤ –æ –ø–∏—Ç–∞–Ω–∏–∏",
            4: "üí∞ –ë—é–¥–∂–µ—Ç–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã",
            5: "üéØ –°–ø–µ—Ü–ø—Ä–æ–µ–∫—Ç—ã",
            6: "‚ùì –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã"
        }
    
    def get_daily_content(self, meal_type):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ —Ç–∏–ø—É –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏"""
        kemerovo_time = self.get_kemerovo_time()
        weekday = kemerovo_time.weekday()
        theme = self.content_themes[weekday]
        
        content_generators = {
            '–∑–∞–≤—Ç—Ä–∞–∫': self.generate_breakfast_content,
            '–æ–±–µ–¥': self.generate_lunch_content,
            '—É–∂–∏–Ω': self.generate_dinner_content,
            '–ø–µ—Ä–µ–∫—É—Å': self.generate_snack_content
        }
        
        content = content_generators[meal_type](weekday)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —É–∂–∏–Ω–∞
        if meal_type == '—É–∂–∏–Ω':
            entertainment = self.get_daily_entertainment(weekday)
            content += f"\n\n{entertainment}"
            
        return content
    
    def generate_breakfast_content(self, weekday):
        themes = {
            0: self.monday_breakfast, 1: self.tuesday_breakfast, 2: self.wednesday_breakfast,
            3: self.thursday_breakfast, 4: self.friday_breakfast, 5: self.saturday_breakfast,
            6: self.sunday_breakfast
        }
        return themes.get(weekday, self.default_breakfast)()
    
    def generate_lunch_content(self, weekday):
        themes = {
            0: self.monday_lunch, 1: self.tuesday_lunch, 2: self.wednesday_lunch,
            3: self.thursday_lunch, 4: self.friday_lunch, 5: self.saturday_lunch,
            6: self.sunday_lunch
        }
        return themes.get(weekday, self.default_lunch)()
    
    def generate_dinner_content(self, weekday):
        themes = {
            0: self.monday_dinner, 1: self.tuesday_dinner, 2: self.wednesday_dinner,
            3: self.thursday_dinner, 4: self.friday_dinner, 5: self.saturday_dinner,
            6: self.sunday_dinner
        }
        return themes.get(weekday, self.default_dinner)()
    
    def generate_snack_content(self, weekday):
        return self.default_snack()
    
    def get_daily_entertainment(self, weekday):
        """–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è"""
        entertainment = {
            0: self.monday_entertainment, 1: self.tuesday_entertainment, 2: self.wednesday_entertainment,
            3: self.thursday_entertainment, 4: self.friday_entertainment, 5: self.saturday_entertainment,
            6: self.sunday_entertainment
        }
        return entertainment.get(weekday, self.default_entertainment)()
    
    # –†–ê–ó–í–õ–ï–ö–ê–¢–ï–õ–¨–ù–´–ô –ö–û–ù–¢–ï–ù–¢ –ü–û –î–ù–Ø–ú –ù–ï–î–ï–õ–ò
    def monday_entertainment(self):
        return """üé• –í–ò–î–ï–û-–†–ï–õ–ò–ó (—Å—Ç–æ—Ä–∏—Å —Ñ–æ—Ä–º–∞—Ç)
üìπ "–ó–∞–≤—Ç—Ä–∞–∫ –∑–∞ 5 –º–∏–Ω—É—Ç: –£—Å–ø–µ–≤–∞—é –¥–æ –∑–≤–æ–Ω–∫–∞ –Ω–∞ Zoom"
üí° –õ–∞–π—Ñ—Ö–∞–∫ –¥–Ω—è: "–ß—Ç–æ–±—ã –æ–≤—Å—è–Ω–∫–∞ –Ω–µ –ø—Ä–∏–≥–æ—Ä–∞–ª–∞, –¥–æ–±–∞–≤—å—Ç–µ —â–µ–ø–æ—Ç–∫—É —Å–æ–ª–∏ –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ"
        
#–ë—ã—Å—Ç—Ä—ã–µ–ó–∞–≤—Ç—Ä–∞–∫–∏ #–£—Ç—Ä–µ–Ω–Ω–∏–π–†–∏—Ç—É–∞–ª #–õ–∞–π—Ñ—Ö–∞–∫–∏"""
    
    def tuesday_entertainment(self):
        return """üì∏ –§–û–¢–û –õ–ê–ù–ß–ë–û–ö–°–ê
üç± "–°–æ–±–∏—Ä–∞–µ–º –æ–±–µ–¥ —Å —Å–æ–±–æ–π: –ü—Ä–∞–≤–∏–ª–æ –ø–æ–ª–æ–≤–∏–Ω–æ–∫"
ü•ó 1/2 - –æ–≤–æ—â–∏, 1/4 - –±–µ–ª–æ–∫, 1/4 - —É–≥–ª–µ–≤–æ–¥—ã
        
üìä –û–ü–†–û–°: "–í –∫–∞–∫–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤—ã pack'–∞–µ—Ç–µ –æ–±–µ–¥?"
üîò –°—Ç–µ–∫–ª–æ üîò –ü–ª–∞—Å—Ç–∏–∫ üîò –ú–Ω–æ–≥–æ—Ä–∞–∑–æ–≤—ã–π –ø–∞–∫–µ—Ç
        
#–û–±–µ–¥—ã–ù–∞–†–∞–±–æ—Ç—É #MealPrep #–ü—Ä–∞–≤–∏–ª–æ–ü–æ–ª–æ–≤–∏–Ω–æ–∫"""
    
    def wednesday_entertainment(self):
        return """üìà –ò–ù–§–û–ì–†–ê–§–ò–ö–ê
‚ö° "–°–ø–∞—Å–∞–µ–º –≤–µ—á–µ—Ä: 3 —à–∞–≥–∞ –¥–æ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ —É–∂–∏–Ω–∞"
1. –ù–∞—Ä–µ–∑–∞—Ç—å –∫—É—Ä–∏—Ü—É –∏ –æ–≤–æ—â–∏
2. –û–±–∂–∞—Ä–∏—Ç—å –Ω–∞ —Å–∫–æ–≤–æ—Ä–æ–¥–µ  
3. –ü–æ–¥–∞—Ç—å —Å –∑–µ–ª–µ–Ω—å—é
        
‚≠ê –ò–ù–ì–†–ï–î–ò–ï–ù–¢ –ù–ï–î–ï–õ–ò: –ê–í–û–ö–ê–î–û
ü•ë –ò—Å—Ç–æ—á–Ω–∏–∫ –ø–æ–ª–µ–∑–Ω—ã—Ö –∂–∏—Ä–æ–≤, –≤–∏—Ç–∞–º–∏–Ω–æ–≤ –ï –∏ –ö
üí° –ò–¥–µ—è: –î–æ–±–∞–≤—å—Ç–µ –≤ —Å–∞–ª–∞—Ç –∏–ª–∏ —Å–¥–µ–ª–∞–π—Ç–µ –≥—É–∞–∫–∞–º–æ–ª–µ
        
#–£–∂–∏–Ω–ó–∞20–ú–∏–Ω—É—Ç #–ò–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∞ #–ê–≤–æ–∫–∞–¥–æ–ù–µ–¥–µ–ª–∏"""
    
    def thursday_entertainment(self):
        myths = [
            {
                'myth': "‚ùå –£–≥–ª–µ–≤–æ–¥—ã –ø–æ—Å–ª–µ 18:00 –ø—Ä–µ–≤—Ä–∞—â–∞—é—Ç—Å—è –≤ –∂–∏—Ä",
                'truth': "‚úÖ –ü—Ä–∞–≤–¥–∞: –û—Ä–≥–∞–Ω–∏–∑–º—É –≤–∞–∂–µ–Ω –û–ë–©–ò–ô –∫–∞–ª–æ—Ä–∞–∂ –∑–∞ –¥–µ–Ω—å!"
            },
            {
                'myth': "‚ùå –ß—Ç–æ–±—ã –ø–æ—Ö—É–¥–µ—Ç—å, –Ω—É–∂–Ω–æ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ–±–µ–∑–∂–∏—Ä–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã", 
                'truth': "‚úÖ –ü—Ä–∞–≤–¥–∞: –í –æ–±–µ–∑–∂–∏—Ä–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–∞—Ö —á–∞—Å—Ç–æ –±–æ–ª—å—à–µ —Å–∞—Ö–∞—Ä–∞!"
            },
            {
                'myth': "‚ùå –ì–ª—é—Ç–µ–Ω - —ç—Ç–æ –∑–ª–æ –¥–ª—è –≤—Å–µ—Ö",
                'truth': "‚úÖ –ü—Ä–∞–≤–¥–∞: –¢–æ–ª—å–∫–æ 1% –ª—é–¥–µ–π –∏–º–µ–µ—Ç —Ü–µ–ª–∏–∞–∫–∏—é!"
            }
        ]
        myth = random.choice(myths)
        return f"""üîç –†–ê–ó–ë–û–† –ú–ò–§–ê
        
{myth['myth']}
        
{myth['truth']}
        
üí° –ù–∞—É—á–Ω—ã–π —Ñ–∞–∫—Ç: –ë–∞–ª–∞–Ω—Å –∏ —É–º–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å - –∫–ª—é—á –∫ –∑–¥–æ—Ä–æ–≤–æ–º—É –ø–∏—Ç–∞–Ω–∏—é!
        
#–ú–∏—Ñ—ã–û–î–∏–µ—Ç–æ–ª–æ–≥–∏–∏ #–ü–∏—Ç–∞–Ω–∏–µ–ù–∞—É—á–Ω–æ #–†–∞–∑—Ä—É—à–∞–µ–º–ú–∏—Ñ—ã"""
    
    def friday_entertainment(self):
        budget_products = [
            {"name": "–ì–†–ï–ß–ö–ê", "recipes": "–ì—Ä–µ—á–Ω–µ–≤–∞—è –∫–∞—à–∞, –≥—Ä–µ—á–∞–Ω–∏–∫–∏, –≥—Ä–µ—á–∫–∞ —Å –≥—Ä–∏–±–∞–º–∏"},
            {"name": "–ö–£–†–ò–ù–´–ï –ë–ï–î–†–ê", "recipes": "–ó–∞–ø–µ—á–µ–Ω–Ω—ã–µ –±–µ–¥—Ä–∞, —Å—É–ø, —Å–∞–ª–∞—Ç"},
            {"name": "–ö–û–ù–°–ï–†–í–ò–†–û–í–ê–ù–ù–ê–Ø –§–ê–°–û–õ–¨", "recipes": "–°–∞–ª–∞—Ç—ã, —Å—É–ø—ã, –ø–∞—à—Ç–µ—Ç—ã"}
        ]
        product = random.choice(budget_products)
        return f"""üí∞ –ë–Æ–î–ñ–ï–¢–ù–´–ô –£–ñ–ò–ù
        
üçΩÔ∏è "–£–∂–∏–Ω –¥–ª—è –¥–≤–æ–∏—Ö –∑–∞ 250 —Ä—É–±–ª–µ–π"
üìä –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏
        
üõí –ü–†–û–î–£–ö–¢-–í–´–†–£–ß–ê–õ–ö–ê: {product['name']}
üìù 3 —Ä–µ—Ü–µ–ø—Ç–∞: {product['recipes']}
        
üí° –°–æ–≤–µ—Ç: –ü–æ–∫—É–ø–∞–π—Ç–µ —Å–µ–∑–æ–Ω–Ω—ã–µ –æ–≤–æ—â–∏ - –æ–Ω–∏ –¥–µ—à–µ–≤–ª–µ –∏ —Å–≤–µ–∂–µ–µ!
        
#–ë—é–¥–∂–µ—Ç–Ω—ã–µ–†–µ—Ü–µ–ø—Ç—ã #–≠–∫–æ–Ω–æ–º–Ω–æ–µ–ü–∏—Ç–∞–Ω–∏–µ #–ü—Ä–æ–¥—É–∫—Ç–í—ã—Ä—É—á–∞–ª–∫–∞"""
    
    def saturday_entertainment(self):
        specials = [
            {
                'topic': "üí™ –°–ü–û–†–¢–ü–ò–¢ –î–õ–Ø –ù–ê–ß–ò–ù–ê–Æ–©–ò–•",
                'content': "üç∂ –ü—Ä–æ—Ç–µ–∏–Ω–æ–≤—ã–π –∫–æ–∫—Ç–µ–π–ª—å –î–û —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ - —ç–Ω–µ—Ä–≥–∏—è\nüç∂ –ü—Ä–æ—Ç–µ–∏–Ω–æ–≤—ã–π –∫–æ–∫—Ç–µ–π–ª—å –ü–û–°–õ–ï - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ\n‚ö†Ô∏è –ù–µ –∑–∞–º–µ–Ω—è–π—Ç–µ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—É—é –µ–¥—É –¥–æ–±–∞–≤–∫–∞–º–∏!",
                'checklist': "üìã 5 –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –Ω–µ—Ö–≤–∞—Ç–∫–∏ –±–µ–ª–∫–∞:\n1. –í—ã–ø–∞–¥–µ–Ω–∏–µ –≤–æ–ª–æ—Å\n2. –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è —É—Å—Ç–∞–ª–æ—Å—Ç—å\n3. –ß–∞—Å—Ç—ã–µ –±–æ–ª–µ–∑–Ω–∏\n4. –õ–æ–º–∫–∏–µ –Ω–æ–≥—Ç–∏\n5. –ú–µ–¥–ª–µ–Ω–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ"
            },
            {
                'topic': "üåø –î–ï–¢–û–ö–°: –ü–†–ê–í–î–ê –ò –ú–ò–§–´", 
                'content': "üîÑ –ù–∞—à–µ —Ç–µ–ª–æ —Å–∞–º–æ –æ—á–∏—â–∞–µ—Ç—Å—è! –ü–æ–º–æ–≥–∏—Ç–µ –µ–º—É:\nüíß –ë–æ–ª—å—à–µ –≤–æ–¥—ã\nü•¶ –ö–ª–µ—Ç—á–∞—Ç–∫–∞ –∏–∑ –æ–≤–æ—â–µ–π\nüò¥ –ó–¥–æ—Ä–æ–≤—ã–π —Å–æ–Ω\nüö´ –ú–∏–Ω–∏–º—É–º –∞–ª–∫–æ–≥–æ–ª—è",
                'checklist': "‚úÖ –ù–∞—Å—Ç–æ—è—â–∏–π –¥–µ—Ç–æ–∫—Å - —ç—Ç–æ:\n‚Ä¢ –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ\n‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–∞—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–æ–Ω\n‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å–æ–º"
            }
        ]
        special = random.choice(specials)
        return f"""üéØ –°–ü–ï–¶–ü–†–û–ï–ö–¢: {special['topic']}
        
{special['content']}
        
{special['checklist']}
        
üèãÔ∏è üíé –°–æ–≤–µ—Ç —ç–∫—Å–ø–µ—Ä—Ç–∞: "–ù–∞—á–∏–Ω–∞–π—Ç–µ —Å 1–≥ –±–µ–ª–∫–∞ –Ω–∞ –∫–≥ –≤–µ—Å–∞"
        
#–°–ø–µ—Ü–ø—Ä–æ–µ–∫—Ç #–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ–ú–∞—Ç–µ—Ä–∏–∞–ª—ã #–°–ø–æ—Ä—Ç–ø–∏—Ç #–î–µ—Ç–æ–∫—Å"""
    
    def sunday_entertainment(self):
        qa_list = [
            {
                'question': '"–ü–æ—á–µ–º—É —è –Ω–µ —Ö—É–¥–µ—é –Ω–∞ –¥–µ—Ñ–∏—Ü–∏—Ç–µ –∫–∞–ª–æ—Ä–∏–π?"',
                'answer': 'üìù –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n‚Ä¢ –ó–∞–Ω–∏–∂–∞–µ—Ç–µ –∫–∞–ª–æ—Ä–∏–∏\n‚Ä¢ –ù–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç–µ —Å–æ—É—Å—ã/–Ω–∞–ø–∏—Ç–∫–∏\n‚Ä¢ –°—Ç—Ä–µ—Å—Å –∏ –Ω–µ–¥–æ—Å—ã–ø\n‚Ä¢ –ü–ª–∞—Ç–æ - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ!'
            },
            {
                'question': '"–°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å –Ω—É–∂–Ω–æ –µ—Å—Ç—å?"', 
                'answer': 'üìù –ì–ª–∞–≤–Ω–æ–µ - –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–ª–æ—Ä–∏–π –∏ –ë–ñ–£!\n‚Ä¢ 3-4 –ø—Ä–∏–µ–º–∞ - –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞\n‚Ä¢ 1-2 –ø—Ä–∏–µ–º–∞ - –µ—Å–ª–∏ —É–¥–æ–±–Ω–æ –≤–∞–º\n‚Ä¢ –°–ª—É—à–∞–π—Ç–µ —Å–≤–æ–π –≥–æ–ª–æ–¥!'
            }
        ]
        qa = random.choice(qa_list)
        return f"""‚ùì –û–¢–í–ï–¢–´ –ù–ê –í–û–ü–†–û–°–´
        
–í–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–∞:
"{qa['question']}"
        
–ù–∞—à –æ—Ç–≤–µ—Ç:
{qa['answer']}
        
üí¨ –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã? –ü–∏—à–∏—Ç–µ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö - –æ—Ç–≤–µ—á–∞–µ–º –∫–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ!
üì± –ú–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —á–µ—Ä–µ–∑ Google Forms (—Å—Å—ã–ª–∫–∞ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞)
        
#–í–æ–ø—Ä–æ—Å–û—Ç–≤–µ—Ç #–ü–æ–º–æ—â—å–≠–∫—Å–ø–µ—Ä—Ç–∞ #–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è"""
    
    def default_entertainment(self):
        return "üí° –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø–∏—Ç—å –≤–æ–¥—É –∏ –¥–≤–∏–≥–∞—Ç—å—Å—è! –ú–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –±–æ–ª—å—à–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º! üí™"
    
    # –û–°–ù–û–í–ù–´–ï –†–ï–¶–ï–ü–¢–´ (—Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏)
    def monday_breakfast(self):
        return self.format_recipe({
            'name': 'ü•û –ë—ã—Å—Ç—Ä–∞—è –æ–≤—Å—è–Ω–∫–∞ —Å —è–≥–æ–¥–∞–º–∏',
            'ingredients': ['–û–≤—Å—è–Ω—ã–µ —Ö–ª–æ–ø—å—è - 50–≥', '–ú–æ–ª–æ–∫–æ - 200–º–ª', '–Ø–≥–æ–¥—ã - 100–≥', '–ú–µ–¥ - 1 —á.–ª.'],
            'steps': ['–ó–∞–ª–∏—Ç—å –æ–≤—Å—è–Ω–∫—É –º–æ–ª–æ–∫–æ–º', '–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫–∞ 3 –º–∏–Ω—É—Ç—ã', '–î–æ–±–∞–≤–∏—Ç—å —è–≥–æ–¥—ã –∏ –º–µ–¥'],
            'time': '5 –º–∏–Ω—É—Ç',
            'calories': '250 –∫–∫–∞–ª'
        }, "üöÄ –ü–û–ù–ï–î–ï–õ–¨–ù–ò–ö: –ë–´–°–¢–†–´–ï –ó–ê–í–¢–†–ê–ö–ò")
    
    def tuesday_lunch(self):
        return self.format_recipe({
            'name': 'üç± –õ–∞–Ω—á–±–æ–∫—Å: –ö—É—Ä–∏—Ü–∞ —Å –∫–∏–Ω–æ–∞',
            'ingredients': ['–ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ - 150–≥', '–ö–∏–Ω–æ–∞ - 100–≥', '–û–≤–æ—â–∏ - 200–≥', '–°–æ—É—Å - 30–≥'],
            'steps': ['–ü—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –∫—É—Ä–∏—Ü—É –∏ –∫–∏–Ω–æ–∞', '–ù–∞—Ä–µ–∑–∞—Ç—å –æ–≤–æ—â–∏', '–°–æ–±—Ä–∞—Ç—å –ø–æ –ø—Ä–∞–≤–∏–ª—É –ø–æ–ª–æ–≤–∏–Ω–æ–∫'],
            'time': '15 –º–∏–Ω—É—Ç', 
            'calories': '400 –∫–∫–∞–ª'
        }, "üíº –í–¢–û–†–ù–ò–ö: –û–ë–ï–î–´ –î–õ–Ø –†–ê–ë–û–¢–´")
    
    def wednesday_dinner(self):
        return self.format_recipe({
            'name': 'üç≤ –õ–æ—Å–æ—Å—å —Å –±—Ä–æ–∫–∫–æ–ª–∏',
            'ingredients': ['–õ–æ—Å–æ—Å—å - 200–≥', '–ë—Ä–æ–∫–∫–æ–ª–∏ - 200–≥', '–ß–µ—Å–Ω–æ–∫ - 2 –∑—É–±—á–∏–∫–∞', '–õ–∏–º–æ–Ω - 0.5 —à—Ç'],
            'steps': ['–ó–∞–ø–µ—á—å –ª–æ—Å–æ—Å—å 15 –º–∏–Ω', '–ü—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –±—Ä–æ–∫–∫–æ–ª–∏ –Ω–∞ –ø–∞—Ä—É', '–ü–æ–¥–∞—Ç—å —Å –ª–∏–º–æ–Ω–æ–º'],
            'time': '20 –º–∏–Ω—É—Ç',
            'calories': '350 –∫–∫–∞–ª'
        }, "‚ö° –°–†–ï–î–ê: –£–ñ–ò–ù–´ –ó–ê 20 –ú–ò–ù–£–¢")
    
    def thursday_dinner(self):
        return self.format_recipe({
            'name': 'üçõ –ò–Ω–¥–µ–π–∫–∞ —Å –±—É–ª–≥—É—Ä–æ–º',
            'ingredients': ['–§–∏–ª–µ –∏–Ω–¥–µ–π–∫–∏ - 200–≥', '–ë—É–ª–≥—É—Ä - 100–≥', '–û–≤–æ—â–∏ - 250–≥', '–°–ø–µ—Ü–∏–∏'],
            'steps': ['–û–±–∂–∞—Ä–∏—Ç—å –∏–Ω–¥–µ–π–∫—É', '–ü—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –±—É–ª–≥—É—Ä', '–¢—É—à–∏—Ç—å —Å –æ–≤–æ—â–∞–º–∏ 15 –º–∏–Ω'],
            'time': '25 –º–∏–Ω—É—Ç',
            'calories': '380 –∫–∫–∞–ª'
        }, "üîç –ß–ï–¢–í–ï–†–ì: –†–ê–ó–ë–û–† –ú–ò–§–û–í")
    
    def friday_dinner(self):
        return self.format_recipe({
            'name': 'üçù –ü–∞—Å—Ç–∞ —Å —Ç—É–Ω—Ü–æ–º',
            'ingredients': ['–ü–∞—Å—Ç–∞ - 80–≥ (40‚ÇΩ)', '–¢—É–Ω–µ—Ü –∫–æ–Ω—Å–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–π - 1 –±–∞–Ω–∫–∞ (80‚ÇΩ)', '–ü–æ–º–∏–¥–æ—Ä—ã - 2 —à—Ç (30‚ÇΩ)', '–õ—É–∫ - 1 —à—Ç (10‚ÇΩ)'],
            'steps': ['–û—Ç–≤–∞—Ä–∏—Ç—å –ø–∞—Å—Ç—É', '–û–±–∂–∞—Ä–∏—Ç—å –ª—É–∫ –∏ –ø–æ–º–∏–¥–æ—Ä—ã', '–î–æ–±–∞–≤–∏—Ç—å —Ç—É–Ω—Ü–∞', '–°–º–µ—à–∞—Ç—å —Å –ø–∞—Å—Ç–æ–π'],
            'time': '20 –º–∏–Ω—É—Ç',
            'calories': '420 –∫–∫–∞–ª',
            'cost': 'üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Ä—Ü–∏–∏: ~80 —Ä—É–±–ª–µ–π'
        }, "üí∞ –ü–Ø–¢–ù–ò–¶–ê: –ë–Æ–î–ñ–ï–¢–ù–´–ï –†–ï–¶–ï–ü–¢–´")
    
    def default_breakfast(self):
        return self.format_recipe({
            'name': 'ü•£ –¢–≤–æ—Ä–æ–≥ —Å —Ñ—Ä—É–∫—Ç–∞–º–∏',
            'ingredients': ['–¢–≤–æ—Ä–æ–≥ 5% - 150–≥', '–ë–∞–Ω–∞–Ω - 1 —à—Ç', '–ú–µ–¥ - 1 —á.–ª.', '–û—Ä–µ—Ö–∏ - 20–≥'],
            'steps': ['–°–º–µ—à–∞—Ç—å —Ç–≤–æ—Ä–æ–≥ —Å –º–µ–¥–æ–º', '–î–æ–±–∞–≤–∏—Ç—å –Ω–∞—Ä–µ–∑–∞–Ω–Ω—ã–µ —Ñ—Ä—É–∫—Ç—ã', '–ü–æ—Å—ã–ø–∞—Ç—å –æ—Ä–µ—Ö–∞–º–∏'],
            'time': '3 –º–∏–Ω—É—Ç—ã',
            'calories': '220 –∫–∫–∞–ª'
        }, "üåÖ –ó–ê–í–¢–†–ê–ö –î–ù–Ø")
    
    def default_lunch(self):
        return self.format_recipe({
            'name': 'üç≤ –°—É–ø-–ø—é—Ä–µ –∏–∑ –±—Ä–æ–∫–∫–æ–ª–∏',
            'ingredients': ['–ë—Ä–æ–∫–∫–æ–ª–∏ - 300–≥', '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å - 2 —à—Ç', '–õ—É–∫ - 1 —à—Ç', '–°–ª–∏–≤–∫–∏ - 50–º–ª'],
            'steps': ['–û—Ç–≤–∞—Ä–∏—Ç—å –æ–≤–æ—â–∏', '–ò–∑–º–µ–ª—å—á–∏—Ç—å –±–ª–µ–Ω–¥–µ—Ä–æ–º', '–î–æ–±–∞–≤–∏—Ç—å —Å–ª–∏–≤–∫–∏'],
            'time': '20 –º–∏–Ω—É—Ç', 
            'calories': '180 –∫–∫–∞–ª'
        }, "üçΩÔ∏è –û–ë–ï–î –î–ù–Ø")
    
    def default_dinner(self):
        return self.format_recipe({
            'name': 'üçó –ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ —Å –æ–≤–æ—â–∞–º–∏',
            'ingredients': ['–ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ - 200–≥', '–û–≤–æ—â–∏ - 300–≥', '–°–ø–µ—Ü–∏–∏', '–û–ª–∏–≤–∫–æ–≤–æ–µ –º–∞—Å–ª–æ'],
            'steps': ['–ó–∞–º–∞—Ä–∏–Ω–æ–≤–∞—Ç—å –∫—É—Ä–∏—Ü—É', '–ó–∞–ø–µ—á—å —Å –æ–≤–æ—â–∞–º–∏ 25 –º–∏–Ω', '–ü–æ–¥–∞—Ç—å –≥–æ—Ä—è—á–∏–º'],
            'time': '30 –º–∏–Ω—É—Ç',
            'calories': '280 –∫–∫–∞l'
        }, "üåô –£–ñ–ò–ù –î–ù–Ø")
    
    def default_snack(self):
        return self.format_recipe({
            'name': 'ü•ú –§—Ä—É–∫—Ç–æ–≤—ã–π —Å–∞–ª–∞—Ç —Å –π–æ–≥—É—Ä—Ç–æ–º',
            'ingredients': ['–Ø–±–ª–æ–∫–æ - 1 —à—Ç', '–ë–∞–Ω–∞–Ω - 1 —à—Ç', '–ô–æ–≥—É—Ä—Ç - 100–≥', '–ú–µ–¥ - 1 —á.–ª.'],
            'steps': ['–ù–∞—Ä–µ–∑–∞—Ç—å —Ñ—Ä—É–∫—Ç—ã', '–ó–∞–ø—Ä–∞–≤–∏—Ç—å –π–æ–≥—É—Ä—Ç–æ–º', '–î–æ–±–∞–≤–∏—Ç—å –º–µ–¥'],
            'time': '5 –º–∏–Ω—É—Ç',
            'calories': '150 –∫–∫–∞–ª'
        }, "‚òï –ü–ï–†–ï–ö–£–° –î–ù–Ø")
    
    def format_recipe(self, recipe, theme):
        message = f"{theme}\n\n"
        message += f"üç≥ *{recipe['name']}*\n\n"
        
        message += "ü•ó *–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:*\n"
        for ing in recipe['ingredients']:
            message += f"‚Ä¢ {ing}\n"
            
        message += f"\nüë®‚Äçüç≥ *–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ ({recipe['time']}):*\n"
        for i, step in enumerate(recipe['steps'], 1):
            message += f"{i}. {step}\n"
            
        message += f"\nüìä *–ö–ë–ñ–£:* {recipe['calories']}\n"
        
        if 'cost' in recipe:
            message += f"\n{recipe['cost']}\n"
            
        message += "\nüîî –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å - –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –Ω–æ–≤—ã–µ –ø–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã!"
        
        return message
    
    def send_to_telegram(self, message):
        url = f"https://api.telegram.org/bot{self.token}/sendMessage"
        payload = {
            'chat_id': self.channel,
            'text': message,
            'parse_mode': 'Markdown',
            'disable_web_page_preview': True
        }
        
        try:
            response = requests.post(url, json=payload)
            if response.status_code == 200:
                kemerovo_time = self.get_kemerovo_time()
                print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {kemerovo_time.strftime('%H:%M')} (–ö–µ–º–µ—Ä–æ–≤–æ)")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
                return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
            return False
    
    def run_scheduler(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç 4 –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –¥–µ–Ω—å –ø–æ –∫–µ–º–µ—Ä–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏"""
        # –†–ê–°–ü–ò–°–ê–ù–ò–ï –î–õ–Ø –ö–ï–ú–ï–†–û–í–û (UTC+7)
        schedule.every().day.at("06:00").do(lambda: self.publish_meal('–∑–∞–≤—Ç—Ä–∞–∫'))
        schedule.every().day.at("12:00").do(lambda: self.publish_meal('–æ–±–µ–¥'))
        schedule.every().day.at("17:00").do(lambda: self.publish_meal('—É–∂–∏–Ω'))
        schedule.every().day.at("15:00").do(lambda: self.publish_meal('–ø–µ—Ä–µ–∫—É—Å'))
        
        kemerovo_time = self.get_kemerovo_time()
        print(f"üìÖ –†–ê–°–ü–ò–°–ê–ù–ò–ï –ê–ö–¢–ò–í–ò–†–û–í–ê–ù–û! –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –ö–µ–º–µ—Ä–æ–≤–æ: {kemerovo_time.strftime('%H:%M')}")
        print("ü•û –ó–∞–≤—Ç—Ä–∞–∫: 06:00")
        print("üç≤ –û–±–µ–¥: 12:00") 
        print("üçΩÔ∏è –£–∂–∏–Ω: 17:00")
        print("ü•ú –ü–µ—Ä–µ–∫—É—Å: 15:00")
        
        # –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
        print("üß™ –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–≤—Ç—Ä–∞–∫–∞...")
        self.publish_meal('–∑–∞–≤—Ç—Ä–∞–∫')
        
        while True:
            schedule.run_pending()
            time.sleep(60)
    
    def publish_meal(self, meal_type):
        """–ü—É–±–ª–∏–∫–∞—Ü–∏—è —Ä–µ—Ü–µ–ø—Ç–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏"""
        kemerovo_time = self.get_kemerovo_time()
        print(f"üì§ –ü—É–±–ª–∏–∫–∞—Ü–∏—è {meal_type}... ({kemerovo_time.strftime('%H:%M')} –ö–µ–º–µ—Ä–æ–≤–æ)")
        message = self.get_daily_content(meal_type)
        success = self.send_to_telegram(message)
        
        if success:
            print(f"‚úÖ {meal_type.capitalize()} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ {meal_type}")

# –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
channel = SmartFoodChannel()

# –ó–∞–ø—É—Å–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
def start_scheduler():
    channel.run_scheduler()

scheduler_thread = Thread(target=start_scheduler)
scheduler_thread.daemon = True
scheduler_thread.start()

@app.route('/')
def home():
    kemerovo_time = channel.get_kemerovo_time()
    weekday = kemerovo_time.weekday()
    theme = channel.content_themes[weekday]
    return f"üç≥ –£–º–Ω–∞—è –ö—É—Ö–Ω—è 3.0 –∞–∫—Ç–∏–≤–Ω–∞! –ö–µ–º–µ—Ä–æ–≤–æ: {kemerovo_time.strftime('%H:%M')} | –°–µ–≥–æ–¥–Ω—è: {theme}"

@app.route('/test')
def test():
    test_message = channel.get_daily_content('–∑–∞–≤—Ç—Ä–∞–∫')
    channel.send_to_telegram("üß™ –¢–ï–°–¢: " + test_message[:100] + "...")
    return "–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"

@app.route('/force/<meal_type>')
def force_publish(meal_type):
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ—Ü–µ–ø—Ç–∞"""
    channel.publish_meal(meal_type)
    return f"–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω {meal_type}"

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port)
